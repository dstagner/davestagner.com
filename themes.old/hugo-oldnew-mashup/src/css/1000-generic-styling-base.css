/*! Copyright 2007-2009,2017-2018 Daniel F. Dickinson <cshored@thecshore.com>
 *  Released under the Creative Commons BY (Attribution) 4.0 License
 */

/*  The C Shore Generic Styling Elements
 *
 *  Remember, for the level of specifity last rule wins, hence
 *  most important rules are last
*/

@import "custom-properties.css";

/* Defines semi-block style paragraphs (initial indent) */
/* For the rare case where you need paragrahs with initial indent */
.semiblock p:before {
  text-indent: var(--SemiBlock-textIndent, var(--semiBlockIndent));
}

/* When not using Flex, use this to force following HTML to be rendered
 * below the current element
 */
.clear::after {
  clear : both;
  content: "";
  display: block;
}

/* Generic functional box (e.g. breadcrumb
 *   navigation, news, etc)
 * Only if not CSS3
 */

/* The utility box wrapper should go around a utility box so that things
 * like borders and margins don't confuse the box model
 */
.UtilityBoxWrapper {
  padding: 0;
  margin: 0;
  border: none;
  display: var(--UtilityBoxWrapper-display, var(--utilityBoxWrapperDisplay));
}

.UtilityBox {
  border: var(--UtilityBox-borderWidth, var(--utilityBoxBorderWidth)) var(--UtilityBox-borderStyle, var(--utilityBoxBorderStyle)) var(--UtilityBox-borderColor, var(--utilityBoxBorderColor));
  padding-top: var(--UtilityBox-padding, var(--utilityBoxPadding));
  padding-bottom: .2em;
  text-align: center;
}

.Label {
  font-weight: bold;
}

.enable-zindex {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 0;
}

/* See https://www.coolfields.co.uk/2016/05/text-for-screen-readers-only-updated/ */
.ScreenReaderElement {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  width: 1px;
  overflow: hidden;
  position: absolute !important;
}

.highlight {
  width: inherit;
  display: inline-block;
}

.StartParaPic {
  float: left;
  display: inline-block;
}
